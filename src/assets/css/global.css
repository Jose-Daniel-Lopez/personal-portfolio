/* ===========================
   üì¶ WEBTUI FRAMEWORK IMPORTS
   ===========================
   These imports MUST come first to ensure proper layering and theming.
   WebTUI uses CSS `@layer` for predictable style cascading.
*/

/* Define explicit style layers to control cascade order */
@layer base, utils, components;

/* Base styles (reset, defaults) must be loaded first */
@import "@webtui/css/base.css";

/* Import only the WebTUI components used in the project */
@import "@webtui/css/components/badge.css";
@import "@webtui/css/components/button.css";
@import "@webtui/css/components/typography.css";
@import "@webtui/css/components/separator.css";
@import "@webtui/css/utils/box.css";

/* üé® Themes: MUST come AFTER base and component styles to override correctly */
/* Multiple themes are imported for potential runtime switching (e.g., via JS) */
@import "@webtui/theme-catppuccin";
@import "@webtui/theme-everforest";
@import "@webtui/theme-gruvbox";
@import "@webtui/theme-vitesse";


/* ===========================
   üß± TAILWIND CSS DIRECTIVES
   ===========================
   Must come AFTER all @import rules to allow utility layering.
   Tailwind injects its own base, component, and utility styles.
*/
@tailwind base;
@tailwind components;
@tailwind utilities;


/* ===========================
   üñ•Ô∏è  CUSTOM TERMINAL STYLES
   ===========================
   Overrides and enhancements for a terminal-like UI experience.
*/

/* Global body styling: monospace font stack and terminal color scheme */
body {
  font-family: "JetBrains Mono", "Fira Code",
    Monaco, "Cascadia Code", "Roboto Mono", Consolas, "Courier New", monospace;
  margin: 0;
  padding: 0;
  background-color: var(--background0); /* Themed background */
  color: var(--foreground0);           /* Themed text */
  line-height: 1.5;
}

/* Terminal output blocks (e.g., preformatted logs or code) */
.terminal-output {
  font-family: inherit;
  white-space: pre-wrap; /* Preserves whitespace but wraps long lines */
}

.terminal-output pre {
  margin: 0;
  padding: 0;
  font-family: inherit;
  font-size: 0.9rem;
  line-height: 1.4;
}

/* Command prompt styling (e.g., green username@host) */
.command-prompt {
  color: #a6e3a1; /* Catppuccin-like green */
  font-weight: bold;
}

/* Subtle hover effect for links */
a:hover {
  background-color: rgba(116, 199, 236, 0.1); /* Soft blue tint */
  transition: background-color 0.2s ease;
}


/* ===========================
   üåü ANIMATIONS
   =========================== */

/* Blinking cursor effect for terminal inputs */
@keyframes cursor-blink {
  0%, 50% { opacity: 1; }
  51%, 100% { opacity: 0; }
}

/* Apply blinking cursor to elements with these classes */
.cursor-blink,
.command-cursor {
  animation: cursor-blink 1s infinite;
}


/* ===========================
   üß≠ NAVIGATION & INTERACTIONS
   =========================== */

/* Base styles for navigation links and menu items */
nav a,
.menu-item {
  color: var(--foreground0);
  text-decoration: none;
  padding: 0.25rem 0.5rem;
  border-radius: 0.25rem;
  transition: all 0.2s ease;
}

/* Hover state for navigation: subtle background + themed text color */
nav a:hover,
.menu-item:hover {
  background-color: var(--background2);
  color: var(--green-400, #86efac); /* Fallback: Tailwind green if var not set */
}


/* ===========================
   üé® DESIGN TOKENS (CSS CUSTOM PROPERTIES)
   ===========================
   Centralized responsive values for layout consistency.
   Used in containers, spacing, and readability.
*/

:root {
  --container-max: 1280px;                    /* Max width for standard content */
  --container-wide: 1440px;                   /* Wider layout (e.g., hero sections) */
  --container-pad: clamp(16px, 4vw, 48px);    /* Responsive horizontal padding */
  --reading-max: 72ch;                        /* Optimal line length for readability */
}


/* ===========================
   üìê CONTAINER CLASSES
   ===========================
   Responsive containers for content alignment and max-width control.
*/

/* Standard responsive container */
.container {
  width: min(100% - 2 * var(--container-pad), var(--container-max));
  margin-inline: auto;
}

/* Wider container variant */
.container-wide {
  width: min(100% - 2 * var(--container-pad), var(--container-wide));
  margin-inline: auto;
}

/* Typography container: limits line length for better readability */
.prose-max {
  max-width: var(--reading-max);
}


/* ===========================
   üì± RESPONSIVE PADDING ADJUSTMENTS
   ===========================
   Fine-tune padding based on device size.
*/

@media (max-width: 640px) {
  :root {
    --container-pad: 16px;
  }
}

@media (min-width: 641px) and (max-width: 1024px) {
  :root {
    --container-pad: clamp(24px, 4vw, 32px);
  }
}

@media (min-width: 1025px) {
  :root {
    --container-pad: clamp(32px, 4vw, 48px);
  }
}


/* ===========================
   üß± MAIN CONTENT LAYOUT
   ===========================
   Responsive spacing and margin adjustments for main content area.
   Accounts for side navigation on larger screens.
*/

main#main-content {
  padding-block: clamp(24px, 6vh, 72px);
  margin-left: 0;
  transition: margin-left 0.3s ease-in-out;
}

/* Desktop: sidebar present, shift content right */
@media (min-width: 1024px) {
  main#main-content {
    margin-left: 16rem; /* Matches sidebar width (64 * 0.25rem = 16rem) */
  }
}

/* Tablet landscape: smaller sidebar */
@media (max-width: 1023px) and (min-width: 768px) {
  main#main-content {
    margin-left: 14rem; /* 56 * 0.25rem = 14rem */
  }
}

/* Small tablet */
@media (max-width: 767px) and (min-width: 640px) {
  main#main-content {
    margin-left: 10rem; /* 40 * 0.25rem = 10rem */
  }
}

/* Mobile: no sidebar, but add top padding to avoid header overlap */
@media (max-width: 639px) {
  main#main-content {
    margin-left: 0;
    padding-top: clamp(64px, 8vh, 96px); /* Space for fixed header/hamburger */
  }
}


/* ===========================
   üåÄ SHARED ANIMATIONS
   ===========================
   Reusable keyframes for terminal effects and UI feedback.
   Used across components (e.g., hero, footer).
*/

/* Alternate blinking effect (can differ from cursor-blink if needed) */
@keyframes terminal-blink {
  0%, 50% { opacity: 1; }
  51%, 100% { opacity: 0; }
}

/* Fade-in with slight upward motion (used for typed or revealed content) */
@keyframes terminal-fade-in {
  0% {
    opacity: 0;
    transform: translateY(10px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Pulse animation for active indicators or call-to-action elements */
@keyframes pulse {
  0%, 100% { opacity: 0.8; }
  50% { opacity: 1; }
}


/* ===========================
   üí° ADDITIONAL HOOKS (Optional)
   ===========================
   Example: Enhance button hover state with consistent feedback.
   Can be extended based on design system needs.
*/
[is-="button"]:hover {
  color: white;
}